/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.ControladorActivo;
import Controlador.ControladorDepreciacion;
import Controlador.ControladorVenta;
import Modelo.Activo;
import Modelo.Depreciacion;
import Modelo.DepreciacionAcumulada;
import Modelo.Movimiento;
import Modelo.Venta;
import java.awt.Dimension;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author jose
 */
public class RegistrarVenta extends javax.swing.JFrame {

    /**
     * Creates new form RegistrarClientes
     */
    Activo activo;
    SimpleDateFormat formaFecha;
    Date fechaActual;
    ControladorVenta controladorVenta;
    ControladorActivo controladorActivo;
    ArrayList<Venta> listaVenta;
    DecimalFormat formaFactura, formaPrecio;
    String codigo;
    ArrayList<Movimiento> listaMovimiento;
    Depreciacion depreciacion;
    ControladorDepreciacion controladorDepreciacion;
    ArrayList<DepreciacionAcumulada> listaAcumuladas;
    Double d = 0.00;
    int meses;
    Double precioVenta = 0.00;
    int id = -1;

    public RegistrarVenta(Activo x) {
        initComponents();

        activo = x;
        listaVenta = new ArrayList<>();
        listaMovimiento = new ArrayList<>();
        formaFecha = new SimpleDateFormat("dd-MM-YYYY");
        fechaActual = new Date();
        controladorVenta = new ControladorVenta();
        formaFactura = new DecimalFormat("00000");
        formaPrecio = new DecimalFormat("0.00");
        codigo = obtenerCodigo();
        depreciacion = new Depreciacion();
        controladorDepreciacion = new ControladorDepreciacion();
        listaAcumuladas = new ArrayList<>();
        controladorActivo = new ControladorActivo();

        CajaFecha.setText(formaFecha.format(fechaActual));
        CajaCodigoFatura.setText(codigo);
        listaMovimiento = controladorVenta.obtenerListaMovimiento();
        depreciacion = controladorDepreciacion.obtenerObjeto(activo.getId());
        meses = controladorVenta.obtenerMeses(activo.getId());
        id = controladorActivo.obtenerIdDetalle(activo.getId());

        listaAcumuladas = obtenerListaCondicionada(12);

        llenarCombo();
        calcularPrecio();
        //Línea 1
        this.setSize(new Dimension(899, 450));

        //Línea 2
        this.setMinimumSize(new Dimension(899, 450));
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CajaCodigoFatura = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        TxtApellidos = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TxtDui = new javax.swing.JLabel();
        CajaFecha = new javax.swing.JTextField();
        CajaPrecio = new javax.swing.JTextField();
        TxtNombre2 = new javax.swing.JLabel();
        comboMovimiento = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        botonRegistrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setMaximumSize(size());
        setSize(new java.awt.Dimension(799, 342));
        getContentPane().setLayout(null);

        CajaCodigoFatura.setEnabled(false);
        getContentPane().add(CajaCodigoFatura);
        CajaCodigoFatura.setBounds(580, 10, 200, 30);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 80, 930, 20);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("VENTA DE ACTIVO");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 20, 310, 70);

        TxtApellidos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TxtApellidos.setForeground(new java.awt.Color(255, 255, 255));
        TxtApellidos.setText("FACRURA No:");
        getContentPane().add(TxtApellidos);
        TxtApellidos.setBounds(500, 10, 130, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("RAZON DE VENTA");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(90, 180, 130, 30);

        TxtDui.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TxtDui.setForeground(new java.awt.Color(255, 255, 255));
        TxtDui.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TxtDui.setText("FECHA DE TRANSACCION:");
        getContentPane().add(TxtDui);
        TxtDui.setBounds(450, 180, 160, 30);

        CajaFecha.setEnabled(false);
        getContentPane().add(CajaFecha);
        CajaFecha.setBounds(620, 180, 200, 30);

        CajaPrecio.setEnabled(false);
        getContentPane().add(CajaPrecio);
        CajaPrecio.setBounds(210, 250, 200, 30);

        TxtNombre2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TxtNombre2.setForeground(new java.awt.Color(255, 255, 255));
        TxtNombre2.setText("PRECIO DE VENTA:");
        getContentPane().add(TxtNombre2);
        TxtNombre2.setBounds(90, 250, 120, 30);

        getContentPane().add(comboMovimiento);
        comboMovimiento.setBounds(210, 180, 200, 30);

        jButton1.setBackground(new java.awt.Color(192, 57, 43));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(710, 320, 100, 30);

        botonRegistrar.setBackground(new java.awt.Color(51, 153, 255));
        botonRegistrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        botonRegistrar.setText("Registrar");
        botonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(botonRegistrar);
        botonRegistrar.setBounds(570, 320, 110, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bitcoin_1600x900_10536.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -60, 970, 680);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void botonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarActionPerformed
        // TODO add your handling code here:

        int indice = comboMovimiento.getSelectedIndex();
        String codigoVenta = CajaCodigoFatura.getText();
        int idMovimiento = listaMovimiento.get(indice - 1).getIdMovimiento();
        Double precioVenta = Double.parseDouble(CajaPrecio.getText());
        String fechaVenta = CajaFecha.getText();
        if (true) {
            Venta x = new Venta(id, idMovimiento, codigoVenta, precioVenta, fechaActual);
            controladorVenta.Agregar(x);
            controladorActivo.ModificarEstadoVenta(activo.getId());
            JOptionPane.showMessageDialog(null, "VENTA REALIZADA", "EXITO", JOptionPane.INFORMATION_MESSAGE);
        } else {

        }
    }//GEN-LAST:event_botonRegistrarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RegistrarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RegistrarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RegistrarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RegistrarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new RegistrarClientes().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CajaCodigoFatura;
    private javax.swing.JTextField CajaFecha;
    private javax.swing.JTextField CajaPrecio;
    private javax.swing.JLabel TxtApellidos;
    private javax.swing.JLabel TxtDui;
    private javax.swing.JLabel TxtNombre2;
    private javax.swing.JButton botonRegistrar;
    private javax.swing.JComboBox<String> comboMovimiento;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    private String obtenerCodigo() {
        listaVenta = controladorVenta.obtenerCodigo();
        int cantidad = listaVenta.size() + 1;
        String codi = formaFactura.format(cantidad);

        return codi;
    }

    private void llenarCombo() {
        comboMovimiento.addItem("SELECCIONE");
        for (int i = 0; i < listaMovimiento.size(); i++) {
            comboMovimiento.addItem(listaMovimiento.get(i).getNombre());
        }
    }

    private ArrayList<DepreciacionAcumulada> obtenerListaCondicionada(int var) {
        ArrayList<DepreciacionAcumulada> lista = new ArrayList<>();
        Double acumulada = 0.0;
        Double valorLibro = 0.0;
        d = (depreciacion.getP() - depreciacion.getP() * (1 / depreciacion.getPorcentajeL())) / depreciacion.getN();
        d = d / var;

        for (int i = 1; i <= depreciacion.getN() * var; i++) {
            acumulada = acumulada + d;
            valorLibro = depreciacion.getP() - acumulada;
            lista.add(new DepreciacionAcumulada(i, d, acumulada, valorLibro));
        }

        return lista;
    }

    private void calcularPrecio() {

        if (meses > listaAcumuladas.size()) {
            precioVenta = listaAcumuladas.get(listaAcumuladas.size() - 1).getValorLibros();
        } else {
            if (meses == 0) {
                precioVenta = depreciacion.getP();
            } else {
                for (int i = 0; i < listaAcumuladas.size(); i++) {
                    if (meses == listaAcumuladas.get(i).getNumeroAnio()) {
                        precioVenta = listaAcumuladas.get(i).getValorLibros();
                    }
                }
            }
        }

        precioVenta = precioVenta + precioVenta * (1 / depreciacion.getPorcentajeL());
        CajaPrecio.setText("" + formaPrecio.format(precioVenta));
    }
}
